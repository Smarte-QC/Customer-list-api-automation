{
	"info": {
		"_postman_id": "37171695-5222eda4-3911-40ac-849f-ce472612d2c5",
		"name": "Match details and buying group",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Download Lead File",
			"id": "37171695-193c3747-64c3-4ab0-88d0-f41bc23aac32",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{bearer}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"data\": {\r\n        \"id\":6593,\r\n        \"isTrack\":\"false\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{auth_token}}/customer-list/v1/lead-list/downloadLeadFile",
					"host": [
						"{{auth_token}}"
					],
					"path": [
						"customer-list",
						"v1",
						"lead-list",
						"downloadLeadFile"
					]
				}
			},
			"response": []
		},
		{
			"name": "Download Account File",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('✔️CSV path', () => pm.expect(pm.response.json().data).to.include('.csv'));",
							"pm.test('⏱ Response < 1000ms', () => pm.expect(pm.response.responseTime).to.be.below(1000));"
						],
						"type": "text/javascript",
						"packages": {},
						"id": "05ee929c-26c8-4c9e-a1e4-3db62f80517c"
					}
				}
			],
			"id": "37171695-486a17e9-0be6-4424-88ab-9d820bfeee73",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzUxMiJ9.eyJ1c2VyIjp7ImlkIjoyNDkzLCJhY2NvdW50Ijp7ImlkIjoxODIsIm5hbWUiOiJRYSBuZXcgb3JnIDIwMjIiLCJzdGF0dXMiOiJhY3RpdmUiLCJhY2NvdW50RGV0YWlscyI6eyJwaUlkIjoiRUQ1QUJFODBENkIzMTFFQ0E0NkM4NUQwNzc5NjdFNUEiLCJpbmRleFByZWZpeCI6ImNjaV9xYV9uZXdfb3JnXzIwMjJfMTgyIiwic3NvRW5hYmxlZCI6ZmFsc2V9LCJjbGllbnQiOnsiaWQiOjE3OSwibmFtZSI6IlFhIG5ldyBvcmcgMjAyMiIsInN0YXR1cyI6ImFjdGl2ZSJ9LCJjbXNTdWJzY3JpcHRpb24iOnsic3RhdHVzIjoiYWN0aXZlIiwic3Vic2NyaXB0aW9uc0lkIjoiY2YxM2YxZTQtMTdkYS00ODhkLWJhNTctZjhlNDk3ZWU2MTViIn0sInVuaWZ5SW50RGV0YWlscyI6eyJjdXN0b21lck5hbWUiOiJRYSBuZXcgb3JnIDIwMjIiLCJhdXRoVG9rZW4iOiIzYWZiNjU0YzJlIiwiaWRQSUQiOiI2N2U1M2FlYzAxYzYxYzE5NzA2NmRlODkifSwiYWNjb3VudENvbmZpZ3VyYXRpb24iOnsiZXJBY3RpdmUiOmZhbHNlLCJkZGxBY3RpdmUiOmZhbHNlLCJhY2Nlc3NEb3dubG9hZHMiOnRydWUsImFjY2Vzc1RhcmdldExpc3QiOnRydWUsImFjY2Vzc1N1cHByZXNzaW9uTGlzdCI6dHJ1ZSwiYWNjZXNzUHJldmlvdXNseUV4cG9ydGVkRW1haWxzIjp0cnVlLCJpbnRlZ3JhdGlvbnMiOmZhbHNlLCJlbWFpbFRvbGVyYW5jZUxldmVsIjoiaGlnaCIsImZpbHRlckV4Y2x1c2lvbnMiOiIxIn19LCJlbWFpbCI6InFhbWF5Mi5hZG1pbkBzbWFydGVpbmMuY29tIiwidXNlck5hbWUiOiJxYW1heTIuYWRtaW5Ac21hcnRlaW5jLmNvbSIsImZpcnN0TmFtZSI6InN1Y2hpdGEiLCJsYXN0TmFtZSI6InFhbWF5MiIsImRlc2lnbmF0aW9uIjoiIiwic3RhdHVzIjoiYWN0aXZlIiwicm9sZSI6eyJuYW1lIjoiQWRtaW4ifSwibGljZW5zZVR5cGUiOnsiYWxsb3dCdWxrRG93bmxvYWRzIjp0cnVlLCJob3VybHlSZXZlYWxMaW1pdCI6MjUsImxpY2Vuc2VOYW1lIjoiRW50ZXJwcmlzZSBVbmxpbWl0ZWQiLCJtb250aGx5UmV2ZWFsTGltaXQiOjEwMDAwfSwiYnVsa0Rvd25sb2FkIjp0cnVlLCJzc29FbmFibGVkIjpmYWxzZSwiZGVmYXVsdE9yZyI6dHJ1ZSwiYXZhdGFyIjp7ImxhcmdlVXJsIjoiaWctaW1hZ2VzL0dyb3VwLTM0Mi1iaWcucG5nIiwic21hbGxVcmwiOiJpZy1pbWFnZXMvR3JvdXAtMzQyLnBuZyJ9LCJleGlzdGluZ1VzZXIiOmZhbHNlLCJpbnRlcm5hbCI6dHJ1ZSwidXNlckFjY2VzcyI6eyJkaXNjb3ZlciI6dHJ1ZSwiZGF0YWdwdCI6dHJ1ZSwiZW5yaWNoIjp0cnVlLCJwbGF5Ym9vayI6dHJ1ZX19LCJzdWIiOiJxYW1heTIuYWRtaW5Ac21hcnRlaW5jLmNvbSIsImlhdCI6MTc1ODAyNjI4MSwiZXhwIjoxNzU4MTEyNjgxfQ.pWRs8NEaDkQUOPzzDoGD-2DUMoEflUGI5rVZy1wq3SC_NCOhMhprP2KU3_WNcxwwAHsW6aoToLtzlluQxByW3A",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"data\": {\r\n        \"id\": 6610,\r\n        \"isTrack\":\"false\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{auth_token}}/customer-list/v1/account-list/downloadAccountFile",
					"host": [
						"{{auth_token}}"
					],
					"path": [
						"customer-list",
						"v1",
						"account-list",
						"downloadAccountFile"
					]
				}
			},
			"response": []
		},
		{
			"name": "Buying Group Spawn Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('200 OK', () => pm.response.to.have.status(200));",
							"pm.expect(pm.response.json().data).to.be.an('array');",
							"pm.test('⏱ < 500ms', () => pm.expect(pm.response.responseTime).to.be.below(500));"
						],
						"type": "text/javascript",
						"packages": {},
						"id": "6b059981-800e-4b7c-a405-8cf8a328da7a"
					}
				}
			],
			"id": "37171695-41296d23-9a64-4358-ba0d-b4b2f67bd82c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzUxMiJ9.eyJ1c2VyIjp7ImlkIjoyNDkzLCJhY2NvdW50Ijp7ImlkIjoxODIsIm5hbWUiOiJRYSBuZXcgb3JnIDIwMjIiLCJzdGF0dXMiOiJhY3RpdmUiLCJhY2NvdW50RGV0YWlscyI6eyJwaUlkIjoiRUQ1QUJFODBENkIzMTFFQ0E0NkM4NUQwNzc5NjdFNUEiLCJpbmRleFByZWZpeCI6ImNjaV9xYV9uZXdfb3JnXzIwMjJfMTgyIiwic3NvRW5hYmxlZCI6ZmFsc2V9LCJjbGllbnQiOnsiaWQiOjE3OSwibmFtZSI6IlFhIG5ldyBvcmcgMjAyMiIsInN0YXR1cyI6ImFjdGl2ZSJ9LCJjbXNTdWJzY3JpcHRpb24iOnsic3RhdHVzIjoiYWN0aXZlIiwic3Vic2NyaXB0aW9uc0lkIjoiY2YxM2YxZTQtMTdkYS00ODhkLWJhNTctZjhlNDk3ZWU2MTViIn0sInVuaWZ5SW50RGV0YWlscyI6eyJjdXN0b21lck5hbWUiOiJRYSBuZXcgb3JnIDIwMjIiLCJhdXRoVG9rZW4iOiIzYWZiNjU0YzJlIiwiaWRQSUQiOiI2N2U1M2FlYzAxYzYxYzE5NzA2NmRlODkifSwiYWNjb3VudENvbmZpZ3VyYXRpb24iOnsiZXJBY3RpdmUiOmZhbHNlLCJkZGxBY3RpdmUiOmZhbHNlLCJhY2Nlc3NEb3dubG9hZHMiOnRydWUsImFjY2Vzc1RhcmdldExpc3QiOnRydWUsImFjY2Vzc1N1cHByZXNzaW9uTGlzdCI6dHJ1ZSwiYWNjZXNzUHJldmlvdXNseUV4cG9ydGVkRW1haWxzIjp0cnVlLCJpbnRlZ3JhdGlvbnMiOmZhbHNlLCJlbWFpbFRvbGVyYW5jZUxldmVsIjoiaGlnaCIsImZpbHRlckV4Y2x1c2lvbnMiOiIxIn19LCJlbWFpbCI6InFhbWF5Mi5hZG1pbkBzbWFydGVpbmMuY29tIiwidXNlck5hbWUiOiJxYW1heTIuYWRtaW5Ac21hcnRlaW5jLmNvbSIsImZpcnN0TmFtZSI6InN1Y2hpdGEiLCJsYXN0TmFtZSI6InFhbWF5MiIsImRlc2lnbmF0aW9uIjoiIiwic3RhdHVzIjoiYWN0aXZlIiwicm9sZSI6eyJuYW1lIjoiQWRtaW4ifSwibGljZW5zZVR5cGUiOnsiYWxsb3dCdWxrRG93bmxvYWRzIjp0cnVlLCJob3VybHlSZXZlYWxMaW1pdCI6MjUsImxpY2Vuc2VOYW1lIjoiRW50ZXJwcmlzZSBVbmxpbWl0ZWQiLCJtb250aGx5UmV2ZWFsTGltaXQiOjEwMDAwfSwiYnVsa0Rvd25sb2FkIjp0cnVlLCJzc29FbmFibGVkIjpmYWxzZSwiZGVmYXVsdE9yZyI6dHJ1ZSwiYXZhdGFyIjp7ImxhcmdlVXJsIjoiaWctaW1hZ2VzL0dyb3VwLTM0Mi1iaWcucG5nIiwic21hbGxVcmwiOiJpZy1pbWFnZXMvR3JvdXAtMzQyLnBuZyJ9LCJleGlzdGluZ1VzZXIiOmZhbHNlLCJpbnRlcm5hbCI6dHJ1ZSwidXNlckFjY2VzcyI6eyJkaXNjb3ZlciI6dHJ1ZSwiZGF0YWdwdCI6dHJ1ZSwiZW5yaWNoIjp0cnVlLCJwbGF5Ym9vayI6dHJ1ZX19LCJzdWIiOiJxYW1heTIuYWRtaW5Ac21hcnRlaW5jLmNvbSIsImlhdCI6MTc1ODAyNjI4MSwiZXhwIjoxNzU4MTEyNjgxfQ.pWRs8NEaDkQUOPzzDoGD-2DUMoEflUGI5rVZy1wq3SC_NCOhMhprP2KU3_WNcxwwAHsW6aoToLtzlluQxByW3A",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{bearer}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{auth_token}}/ops/v1/agent/spawn-names",
					"host": [
						"{{auth_token}}"
					],
					"path": [
						"ops",
						"v1",
						"agent",
						"spawn-names"
					]
				}
			},
			"response": []
		},
		{
			"name": "Contact Reveal (DD Test) Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Response statusCode is 200\", () => {",
							"    pm.expect(jsonData.status.statusCode).to.eql(200);",
							"});",
							"",
							"pm.test(\"RequestId is present and non-empty\", () => {",
							"    pm.expect(jsonData.status.requestId).to.be.a('string').and.to.have.length.above(0);",
							"});",
							"",
							"pm.test(\"Message indicates success\", () => {",
							"    pm.expect(jsonData.status.message.toLowerCase()).to.include('success');",
							"});",
							"",
							"pm.test(\"Data contains entry for given conGuid\", () => {",
							"    pm.expect(jsonData.data).to.have.property(pm.variables.get('conGuid'));",
							"});",
							"",
							"const contactData = jsonData.data[pm.variables.get('conGuid')];",
							"pm.test(\"Contact data has status true and message Match Found\", () => {",
							"    pm.expect(contactData.status).to.be.true;",
							"    pm.expect(contactData.message).to.eql('Match Found');",
							"});",
							"",
							"pm.test(\"ContactRevealStatus should be boolean\", () => {",
							"    pm.expect(contactData.contactRevealStatus).to.be.a('boolean');",
							"});",
							"",
							"pm.test(\"RevealType is FREE or NEW\", () => {",
							"    pm.expect(['FREE','NEW']).to.include(contactData.revealType);",
							"});",
							"",
							"// Check nested objects for presence and basic validation",
							"pm.test(\"directDial object contains directDialFlag and statusCode\", () => {",
							"    pm.expect(contactData).to.have.property('directDial');",
							"    pm.expect(contactData.directDial).to.have.property('directDialFlag');",
							"    pm.expect(contactData.directDial).to.have.property('statusCode');",
							"});",
							"",
							"pm.test(\"emailRefresherResponse contains edc and status\", () => {",
							"    pm.expect(contactData).to.have.property('emailRefresherResponse');",
							"    pm.expect(contactData.emailRefresherResponse).to.have.property('edc');",
							"    pm.expect(contactData.emailRefresherResponse).to.have.property('status');",
							"});",
							"",
							"// Optional: add more deep field tests here based on your requirements"
						],
						"type": "text/javascript",
						"packages": {},
						"id": "bd01b18d-1385-49f6-9590-036d33a869fe"
					}
				}
			],
			"id": "37171695-60a84ef2-feab-486c-ae14-1007e0e8b5dc",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{auth_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"data\": [\n        {\n            \"conGuid\": \"D4ACF956E08E6FD2B4333A7A6C20902F\",\n            \"compGuid\": \"A940DD45941B41A5\"\n        }\n    ],\n    \"revealSource\": \"Profile page\",\n    \"type\": \"NEW\"\n}"
				},
				"url": {
					"raw": "{{auth_token}}/customer-list/v2/reveal/contact-reveal",
					"host": [
						"{{auth_token}}"
					],
					"path": [
						"customer-list",
						"v2",
						"reveal",
						"contact-reveal"
					]
				}
			},
			"response": []
		}
	]
}